<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Rees.UserInteraction.Contracts</name>
    </assembly>
    <members>
        <member name="T:Rees.UserInteraction.Contracts.IUserInputBox">
            <summary>
            Shows an input box to get one string of text from the user.
            </summary>
        </member>
        <member name="M:Rees.UserInteraction.Contracts.IUserInputBox.Show(System.String,System.String,System.String)">
            <summary>
            Show an input box with a heading and a question.
            </summary>
            <param name="heading">The window title</param>
            <param name="question">The main question text</param>
            <param name="defaultInput">An optional default value for the input box</param>
            <returns>User response to the question.</returns>
        </member>
        <member name="T:Rees.UserInteraction.Contracts.IUserMessageBox">
            <summary>
            Represents a means to show a message to the user.
            </summary>
        </member>
        <member name="M:Rees.UserInteraction.Contracts.IUserMessageBox.Show(System.String,System.String)">
            <summary>
            Show a message with a message and heading.
            </summary>
            <param name="message">The message.</param>
            <param name="headingCaption">The optional heading.</param>
        </member>
        <member name="M:Rees.UserInteraction.Contracts.IUserMessageBox.Show(System.String,System.Object,System.Object[])">
            <summary>
            Show a messgae using a string format.
            </summary>
            <param name="format">The message.</param>
            <param name="argument1">The first argument.</param>
            <param name="args">Other arguments.</param>
        </member>
        <member name="M:Rees.UserInteraction.Contracts.IUserMessageBox.Show(System.String,System.String,System.Object,System.Object[])">
            <summary>
            Show a message using a string format and a heading.
            </summary>
            <param name="headingCaption">The optional heading.</param>
            <param name="format">The message.</param>
            <param name="argument1">The first argument.</param>
            <param name="args">Other arguments.</param>
        </member>
        <member name="M:Rees.UserInteraction.Contracts.IUserMessageBox.Show(System.Exception,System.String)">
            <summary>
            Show a message in regard to an exception that occured.
            </summary>
            <param name="ex">The exception.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:Rees.UserInteraction.Contracts.IUserMessageBox.Show(System.Exception,System.String,System.Object,System.Object[])">
            <summary>
            Show a message in regard to an exception that occured.
            </summary>
            <param name="ex">The exception.</param>
            <param name="format">The message.</param>
            <param name="argument1">The first argument.</param>
            <param name="args">Other arguments.</param>
        </member>
        <member name="T:Rees.UserInteraction.Contracts.IUserPromptOpenFile">
            <summary>
            Represents a file open or choose file dialog.
            </summary>
        </member>
        <member name="M:Rees.UserInteraction.Contracts.IUserPromptOpenFile.ShowDialog">
            <summary>
            Show the file selection dialog box.
            </summary>
            <returns>true to indicate successful selection, false to idicate a problem with file selection, null to indicate cancellation.</returns>
        </member>
        <member name="P:Rees.UserInteraction.Contracts.IUserPromptOpenFile.AddExtension">
            <summary>
            The optional extension to include as an alternative file extension to filter to.
            </summary>
        </member>
        <member name="P:Rees.UserInteraction.Contracts.IUserPromptOpenFile.CheckFileExists">
            <summary>
            Indicates if an optional check that can be performed to check if the user selected file exists.
            </summary>
        </member>
        <member name="P:Rees.UserInteraction.Contracts.IUserPromptOpenFile.CheckPathExists">
            <summary>
            Indicates if an optional check that can be performed to check if the user selected folder exists.
            </summary>
        </member>
        <member name="P:Rees.UserInteraction.Contracts.IUserPromptOpenFile.DefaultExt">
            <summary>
            The optional extension to include to filter file selection to.
            </summary>
        </member>
        <member name="P:Rees.UserInteraction.Contracts.IUserPromptOpenFile.Title">
            <summary>
            The title for the dialog.
            </summary>
        </member>
        <member name="P:Rees.UserInteraction.Contracts.IUserPromptOpenFile.Filter">
            <summary>
            Gets or sets the filter string that determines what types of files are displayed.
            </summary>
        </member>
        <member name="P:Rees.UserInteraction.Contracts.IUserPromptOpenFile.FilterIndex">
            <summary>
            Gets or sets the index of the filter currently selected in a file dialog.
            </summary>
        </member>
        <member name="P:Rees.UserInteraction.Contracts.IUserPromptOpenFile.FileName">
            <summary>
            The resulting file the user has selected.
            </summary>
        </member>
        <member name="T:Rees.UserInteraction.Contracts.IUserPromptSaveFile">
            <summary>
            Represents a file-save dialog.
            </summary>
        </member>
        <member name="M:Rees.UserInteraction.Contracts.IUserPromptSaveFile.ShowDialog">
            <summary>
            Show the file selection dialog box.
            </summary>
            <returns>true to indicate successful selection, false to idicate a problem with file selection, null to indicate cancellation.</returns>
        </member>
        <member name="P:Rees.UserInteraction.Contracts.IUserPromptSaveFile.AddExtension">
            <summary>
            The optional extension to include as an alternative file extension to filter to.
            </summary>
        </member>
        <member name="P:Rees.UserInteraction.Contracts.IUserPromptSaveFile.CheckPathExists">
            <summary>
            Indicates if an optional check that can be performed to check if the user selected folder exists.
            </summary>
        </member>
        <member name="P:Rees.UserInteraction.Contracts.IUserPromptSaveFile.DefaultExt">
            <summary>
            The optional extension to include to filter file selection to.
            </summary>
        </member>
        <member name="P:Rees.UserInteraction.Contracts.IUserPromptSaveFile.Title">
            <summary>
            The title for the dialog.
            </summary>
        </member>
        <member name="P:Rees.UserInteraction.Contracts.IUserPromptSaveFile.Filter">
            <summary>
            Gets or sets the filter string that determines what types of files are displayed.
            </summary>
        </member>
        <member name="P:Rees.UserInteraction.Contracts.IUserPromptSaveFile.FilterIndex">
            <summary>
            Gets or sets the index of the filter currently selected in a file dialog.
            </summary>
        </member>
        <member name="P:Rees.UserInteraction.Contracts.IUserPromptSaveFile.FileName">
            <summary>
            The resulting file the user has selected.
            </summary>
        </member>
        <member name="T:Rees.UserInteraction.Contracts.IUserQuestionBoxYesNo">
            <summary>
            Represents a question to the user towhich the user can only respond with Yes, No, or Cancel.
            </summary>
        </member>
        <member name="M:Rees.UserInteraction.Contracts.IUserQuestionBoxYesNo.Show(System.String,System.String)">
            <summary>
            Show the question box with a caption and heading.
            </summary>
            <param name="question">The yes/no question to show on the dialog.</param>
            <param name="heading">The optional heading for the dialog.</param>
            <returns>true for yes, false for no, and null for cancellation.</returns>
        </member>
        <member name="M:Rees.UserInteraction.Contracts.IUserQuestionBoxYesNo.Show(System.String,System.String,System.Object,System.Object[])">
            <summary>
            Show the question box with a caption and heading.
            </summary>
            <param name="heading">The optional heading for the dialog.</param>
            <param name="questionFormat">The yes/no question to show on the dialog.</param>
            <param name="argument1">The first argument for the string format.</param>
            <param name="args">All other arguments for the string format.</param>
            <returns>true for yes, false for no, and null for cancellation.</returns>
        </member>
        <member name="T:Rees.UserInteraction.Contracts.IViewLoader">
            <summary>
            A means to load a view for displaying purposes. Used by a controller in Mvvm or Mvp to trigger display of a view.
            </summary>
        </member>
        <member name="M:Rees.UserInteraction.Contracts.IViewLoader.Show(System.Object)">
            <summary>
            Show the view in a normal way.
            </summary>
            <param name="context">The model or context the view can use for binding or reference purposes.</param>
        </member>
        <member name="M:Rees.UserInteraction.Contracts.IViewLoader.Close">
            <summary>
            Close and unload the view immediately.
            </summary>
        </member>
        <member name="M:Rees.UserInteraction.Contracts.IViewLoader.ShowDialog(System.Object)">
            <summary>
            Show the view in a dialog manner.
            </summary>
            <param name="context">The model or context the view can use for binding or reference purposes.</param>
            <returns>Used to indicate how the user closed the dialog.  Can be used to determine the difference between cancelling or cofirmation.</returns>
        </member>
        <member name="T:Rees.UserInteraction.Contracts.IWaitCursor">
            <summary>
            Represents a means to show a wait cursor to the user. It is intended to be used with a using block.
            </summary>
        </member>
    </members>
</doc>
